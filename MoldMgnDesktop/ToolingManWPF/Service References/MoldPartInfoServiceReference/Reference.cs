//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToolingManWPF.MoldPartInfoServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoldSearchCondition", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary.Data")]
    [System.SerializableAttribute()]
    public partial class MoldSearchCondition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ToolingManWPF.MoldPartInfoServiceReference.MoldStateType StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ToolingManWPF.MoldPartInfoServiceReference.MoldWarnType WarnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldNR {
            get {
                return this.MoldNRField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldNRField, value) != true)) {
                    this.MoldNRField = value;
                    this.RaisePropertyChanged("MoldNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldTypeId {
            get {
                return this.MoldTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldTypeIdField, value) != true)) {
                    this.MoldTypeIdField = value;
                    this.RaisePropertyChanged("MoldTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIdField, value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ToolingManWPF.MoldPartInfoServiceReference.MoldStateType State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ToolingManWPF.MoldPartInfoServiceReference.MoldWarnType Warn {
            get {
                return this.WarnField;
            }
            set {
                if ((this.WarnField.Equals(value) != true)) {
                    this.WarnField = value;
                    this.RaisePropertyChanged("Warn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoldStateType", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary.ENUM")]
    public enum MoldStateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NULL = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotReturned = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedMantain = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Broken = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoldWarnType", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary.ENUM")]
    public enum MoldWarnType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NULL = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutTime = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InTime = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoldBaseInfo", Namespace="http://schemas.datacontract.org/2004/07/ToolingWCF.DataModel")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ToolingManWPF.MoldPartInfoServiceReference.MoldDynamicInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ToolingManWPF.MoldPartInfoServiceReference.MoldWarnInfo))]
    public partial class MoldBaseInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.Attachment> AttachField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FitConnectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FitKnifeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxLendHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ToolingManWPF.MoldPartInfoServiceReference.MoldStateType StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.Attachment> Attach {
            get {
                return this.AttachField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachField, value) != true)) {
                    this.AttachField = value;
                    this.RaisePropertyChanged("Attach");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentPosition {
            get {
                return this.CurrentPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentPositionField, value) != true)) {
                    this.CurrentPositionField = value;
                    this.RaisePropertyChanged("CurrentPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FitConnector {
            get {
                return this.FitConnectorField;
            }
            set {
                if ((object.ReferenceEquals(this.FitConnectorField, value) != true)) {
                    this.FitConnectorField = value;
                    this.RaisePropertyChanged("FitConnector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FitKnife {
            get {
                return this.FitKnifeField;
            }
            set {
                if ((object.ReferenceEquals(this.FitKnifeField, value) != true)) {
                    this.FitKnifeField = value;
                    this.RaisePropertyChanged("FitKnife");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Material {
            get {
                return this.MaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialField, value) != true)) {
                    this.MaterialField = value;
                    this.RaisePropertyChanged("Material");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLendHour {
            get {
                return this.MaxLendHourField;
            }
            set {
                if ((this.MaxLendHourField.Equals(value) != true)) {
                    this.MaxLendHourField = value;
                    this.RaisePropertyChanged("MaxLendHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoldNR {
            get {
                return this.MoldNRField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldNRField, value) != true)) {
                    this.MoldNRField = value;
                    this.RaisePropertyChanged("MoldNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Producer {
            get {
                return this.ProducerField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerField, value) != true)) {
                    this.ProducerField = value;
                    this.RaisePropertyChanged("Producer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIdField, value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ToolingManWPF.MoldPartInfoServiceReference.MoldStateType State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCN {
            get {
                return this.StateCNField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCNField, value) != true)) {
                    this.StateCNField = value;
                    this.RaisePropertyChanged("StateCN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightField, value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoldDynamicInfo", Namespace="http://schemas.datacontract.org/2004/07/ToolingWCF.DataModel")]
    [System.SerializableAttribute()]
    public partial class MoldDynamicInfo : ToolingManWPF.MoldPartInfoServiceReference.MoldBaseInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AllowedCuttedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CurrentCuttedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastMantainTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastReleasedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MantainCycleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReleaseCycleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AllowedCuttedTime {
            get {
                return this.AllowedCuttedTimeField;
            }
            set {
                if ((this.AllowedCuttedTimeField.Equals(value) != true)) {
                    this.AllowedCuttedTimeField = value;
                    this.RaisePropertyChanged("AllowedCuttedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CurrentCuttedTime {
            get {
                return this.CurrentCuttedTimeField;
            }
            set {
                if ((this.CurrentCuttedTimeField.Equals(value) != true)) {
                    this.CurrentCuttedTimeField = value;
                    this.RaisePropertyChanged("CurrentCuttedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastMantainTime {
            get {
                return this.LastMantainTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LastMantainTimeField, value) != true)) {
                    this.LastMantainTimeField = value;
                    this.RaisePropertyChanged("LastMantainTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastReleasedTime {
            get {
                return this.LastReleasedTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LastReleasedTimeField, value) != true)) {
                    this.LastReleasedTimeField = value;
                    this.RaisePropertyChanged("LastReleasedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MantainCycle {
            get {
                return this.MantainCycleField;
            }
            set {
                if ((this.MantainCycleField.Equals(value) != true)) {
                    this.MantainCycleField = value;
                    this.RaisePropertyChanged("MantainCycle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperateTime {
            get {
                return this.OperateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.OperateTimeField, value) != true)) {
                    this.OperateTimeField = value;
                    this.RaisePropertyChanged("OperateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReleaseCycle {
            get {
                return this.ReleaseCycleField;
            }
            set {
                if ((this.ReleaseCycleField.Equals(value) != true)) {
                    this.ReleaseCycleField = value;
                    this.RaisePropertyChanged("ReleaseCycle");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoldWarnInfo", Namespace="http://schemas.datacontract.org/2004/07/ToolingWCF.DataModel")]
    [System.SerializableAttribute()]
    public partial class MoldWarnInfo : ToolingManWPF.MoldPartInfoServiceReference.MoldBaseInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DisMinuteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisTimeTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LendTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxLendHour1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MinusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ShouldReTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DisMinute {
            get {
                return this.DisMinuteField;
            }
            set {
                if ((this.DisMinuteField.Equals(value) != true)) {
                    this.DisMinuteField = value;
                    this.RaisePropertyChanged("DisMinute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisTimeText {
            get {
                return this.DisTimeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisTimeTextField, value) != true)) {
                    this.DisTimeTextField = value;
                    this.RaisePropertyChanged("DisTimeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LendTime {
            get {
                return this.LendTimeField;
            }
            set {
                if ((this.LendTimeField.Equals(value) != true)) {
                    this.LendTimeField = value;
                    this.RaisePropertyChanged("LendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="MaxLendHour")]
        public double MaxLendHour1 {
            get {
                return this.MaxLendHour1Field;
            }
            set {
                if ((this.MaxLendHour1Field.Equals(value) != true)) {
                    this.MaxLendHour1Field = value;
                    this.RaisePropertyChanged("MaxLendHour1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Minus {
            get {
                return this.MinusField;
            }
            set {
                if ((this.MinusField.Equals(value) != true)) {
                    this.MinusField = value;
                    this.RaisePropertyChanged("Minus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ShouldReTime {
            get {
                return this.ShouldReTimeField;
            }
            set {
                if ((this.ShouldReTimeField.Equals(value) != true)) {
                    this.ShouldReTimeField = value;
                    this.RaisePropertyChanged("ShouldReTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attachment", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary.Data")]
    [System.SerializableAttribute()]
    public partial class Attachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ToolingManWPF.MoldPartInfoServiceReference.AttachmentType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachmentId {
            get {
                return this.AttachmentIdField;
            }
            set {
                if ((this.AttachmentIdField.Equals(value) != true)) {
                    this.AttachmentIdField = value;
                    this.RaisePropertyChanged("AttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterNR {
            get {
                return this.MasterNRField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterNRField, value) != true)) {
                    this.MasterNRField = value;
                    this.RaisePropertyChanged("MasterNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ToolingManWPF.MoldPartInfoServiceReference.AttachmentType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentType", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary.ENUM")]
    public enum AttachmentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PICTURE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageRecord", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary.Data")]
    [System.SerializableAttribute()]
    public partial class StorageRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StorageRecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StorageRecordNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PositionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicantIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ToolingManWPF.MoldPartInfoServiceReference.StorageRecordType RecordTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StorageRecordId {
            get {
                return this.StorageRecordIdField;
            }
            set {
                if ((this.StorageRecordIdField.Equals(value) != true)) {
                    this.StorageRecordIdField = value;
                    this.RaisePropertyChanged("StorageRecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StorageRecordNR {
            get {
                return this.StorageRecordNRField;
            }
            set {
                if ((this.StorageRecordNRField.Equals(value) != true)) {
                    this.StorageRecordNRField = value;
                    this.RaisePropertyChanged("StorageRecordNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<System.Guid> PositionId {
            get {
                return this.PositionIdField;
            }
            set {
                if ((this.PositionIdField.Equals(value) != true)) {
                    this.PositionIdField = value;
                    this.RaisePropertyChanged("PositionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string OperatorId {
            get {
                return this.OperatorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorIdField, value) != true)) {
                    this.OperatorIdField = value;
                    this.RaisePropertyChanged("OperatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string ApplicantId {
            get {
                return this.ApplicantIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicantIdField, value) != true)) {
                    this.ApplicantIdField = value;
                    this.RaisePropertyChanged("ApplicantId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Nullable<int> Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public ToolingManWPF.MoldPartInfoServiceReference.StorageRecordType RecordType {
            get {
                return this.RecordTypeField;
            }
            set {
                if ((this.RecordTypeField.Equals(value) != true)) {
                    this.RecordTypeField = value;
                    this.RaisePropertyChanged("RecordType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string TargetNR {
            get {
                return this.TargetNRField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetNRField, value) != true)) {
                    this.TargetNRField = value;
                    this.RaisePropertyChanged("TargetNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageRecordType", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary.ENUM")]
    public enum StorageRecordType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Produce = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mantain = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Test = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InStore = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutStore = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoveStore = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrapStore = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Return = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoveWStation = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoldReleaseInfo", Namespace="http://schemas.datacontract.org/2004/07/ToolingWCF.DataModel")]
    [System.SerializableAttribute()]
    public partial class MoldReleaseInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.Attachment> AttachField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ToolingManWPF.MoldPartInfoServiceReference.ReportType ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportTypeCNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TesterNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TesterNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.Attachment> Attach {
            get {
                return this.AttachField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachField, value) != true)) {
                    this.AttachField = value;
                    this.RaisePropertyChanged("Attach");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ToolingManWPF.MoldPartInfoServiceReference.ReportType ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((this.ReportTypeField.Equals(value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportTypeCN {
            get {
                return this.ReportTypeCNField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportTypeCNField, value) != true)) {
                    this.ReportTypeCNField = value;
                    this.RaisePropertyChanged("ReportTypeCN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetNR {
            get {
                return this.TargetNRField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetNRField, value) != true)) {
                    this.TargetNRField = value;
                    this.RaisePropertyChanged("TargetNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TesterNR {
            get {
                return this.TesterNRField;
            }
            set {
                if ((object.ReferenceEquals(this.TesterNRField, value) != true)) {
                    this.TesterNRField = value;
                    this.RaisePropertyChanged("TesterNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TesterName {
            get {
                return this.TesterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TesterNameField, value) != true)) {
                    this.TesterNameField = value;
                    this.RaisePropertyChanged("TesterName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportType", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary.ENUM")]
    public enum ReportType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaintainReport = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TestReport = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary.Data")]
    [System.SerializableAttribute()]
    public partial class Position : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapicityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.UniqStorage> UniqStorageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PositionID {
            get {
                return this.PositionIDField;
            }
            set {
                if ((this.PositionIDField.Equals(value) != true)) {
                    this.PositionIDField = value;
                    this.RaisePropertyChanged("PositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseNR {
            get {
                return this.WarehouseNRField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseNRField, value) != true)) {
                    this.WarehouseNRField = value;
                    this.RaisePropertyChanged("WarehouseNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string PositionNR {
            get {
                return this.PositionNRField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionNRField, value) != true)) {
                    this.PositionNRField = value;
                    this.RaisePropertyChanged("PositionNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int Capicity {
            get {
                return this.CapicityField;
            }
            set {
                if ((this.CapicityField.Equals(value) != true)) {
                    this.CapicityField = value;
                    this.RaisePropertyChanged("Capicity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.UniqStorage> UniqStorage {
            get {
                return this.UniqStorageField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqStorageField, value) != true)) {
                    this.UniqStorageField = value;
                    this.RaisePropertyChanged("UniqStorage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UniqStorage", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary.Data")]
    [System.SerializableAttribute()]
    public partial class UniqStorage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UniqStorageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PositionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UniqStorageId {
            get {
                return this.UniqStorageIdField;
            }
            set {
                if ((this.UniqStorageIdField.Equals(value) != true)) {
                    this.UniqStorageIdField = value;
                    this.RaisePropertyChanged("UniqStorageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string UniqNR {
            get {
                return this.UniqNRField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqNRField, value) != true)) {
                    this.UniqNRField = value;
                    this.RaisePropertyChanged("UniqNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Guid PositionId {
            get {
                return this.PositionIdField;
            }
            set {
                if ((this.PositionIdField.Equals(value) != true)) {
                    this.PositionIdField = value;
                    this.RaisePropertyChanged("PositionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string PackageNR {
            get {
                return this.PackageNRField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageNRField, value) != true)) {
                    this.PackageNRField = value;
                    this.RaisePropertyChanged("PackageNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportView", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary.Data")]
    [System.SerializableAttribute()]
    public partial class ReportView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ToolingManWPF.MoldPartInfoServiceReference.ReportType ReportTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string MoldID {
            get {
                return this.MoldIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MoldIDField, value) != true)) {
                    this.MoldIDField = value;
                    this.RaisePropertyChanged("MoldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string OperatorID {
            get {
                return this.OperatorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorIDField, value) != true)) {
                    this.OperatorIDField = value;
                    this.RaisePropertyChanged("OperatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Guid ReportId {
            get {
                return this.ReportIdField;
            }
            set {
                if ((this.ReportIdField.Equals(value) != true)) {
                    this.ReportIdField = value;
                    this.RaisePropertyChanged("ReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public ToolingManWPF.MoldPartInfoServiceReference.ReportType ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((this.ReportTypeField.Equals(value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MoldPartInfoServiceReference.IMoldPartInfoService")]
    public interface IMoldPartInfoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetMoldByMutiConditions", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetMoldByMutiConditionsResponse")]
        System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.MoldBaseInfo> GetMoldByMutiConditions(ToolingManWPF.MoldPartInfoServiceReference.MoldSearchCondition conditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetMoldBaseInfoByNR", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetMoldBaseInfoByNRResponse")]
        ToolingManWPF.MoldPartInfoServiceReference.MoldBaseInfo GetMoldBaseInfoByNR(string moldNR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetMoldDynamicInfoByMoldNR", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetMoldDynamicInfoByMoldNRResponse")]
        ToolingManWPF.MoldPartInfoServiceReference.MoldDynamicInfo GetMoldDynamicInfoByMoldNR(string moldNR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetMoldApplyRecords", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetMoldApplyRecordsResponse")]
        System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.StorageRecord> GetMoldApplyRecords(string moldNR, string applicantId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetMoldApplyRecordsInPages", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetMoldApplyRecordsInPagesResponse")]
        System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.StorageRecord> GetMoldApplyRecordsInPages(string moldNR, int pageIndex, int pageSize, string applicantId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetMoldReleaseInfoByMoldNR", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetMoldReleaseInfoByMoldNRResponse")]
        System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.MoldReleaseInfo> GetMoldReleaseInfoByMoldNR(string moldNR, string operatorId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetMoldReleaseInfoByMoldNRInPage", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetMoldReleaseInfoByMoldNRInPageResponse")]
        System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.MoldReleaseInfo> GetMoldReleaseInfoByMoldNRInPage(string moldNR, int pageIndex, int pageSize, string operatorId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetFileByName", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetFileByNameResponse")]
        byte[] GetFileByName(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetMoldWarnInfo", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetMoldWarnInfoResponse")]
        System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.MoldWarnInfo> GetMoldWarnInfo(ToolingManWPF.MoldPartInfoServiceReference.MoldWarnType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetMoldPositionByNr", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetMoldPositionByNrResponse")]
        ToolingManWPF.MoldPartInfoServiceReference.Position GetMoldPositionByNr(string moldNR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetMoldNrByPosiNr", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetMoldNrByPosiNrResponse")]
        string GetMoldNrByPosiNr(string posiNr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetMoldCurrentPosition", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetMoldCurrentPositionResponse")]
        string GetMoldCurrentPosition(string moldNr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetReportViewByDate", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetReportViewByDateResponse")]
        System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.ReportView> GetReportViewByDate(ToolingManWPF.MoldPartInfoServiceReference.ReportType type, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/GetStoreRecordByDate", ReplyAction="http://tempuri.org/IMoldPartInfoService/GetStoreRecordByDateResponse")]
        System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.StorageRecord> GetStoreRecordByDate(int type, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoldPartInfoService/DelAttachmentById", ReplyAction="http://tempuri.org/IMoldPartInfoService/DelAttachmentByIdResponse")]
        bool DelAttachmentById(int attachId, string filePath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMoldPartInfoServiceChannel : ToolingManWPF.MoldPartInfoServiceReference.IMoldPartInfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoldPartInfoServiceClient : System.ServiceModel.ClientBase<ToolingManWPF.MoldPartInfoServiceReference.IMoldPartInfoService>, ToolingManWPF.MoldPartInfoServiceReference.IMoldPartInfoService {
        
        public MoldPartInfoServiceClient() {
        }
        
        public MoldPartInfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MoldPartInfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MoldPartInfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MoldPartInfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.MoldBaseInfo> GetMoldByMutiConditions(ToolingManWPF.MoldPartInfoServiceReference.MoldSearchCondition conditions) {
            return base.Channel.GetMoldByMutiConditions(conditions);
        }
        
        public ToolingManWPF.MoldPartInfoServiceReference.MoldBaseInfo GetMoldBaseInfoByNR(string moldNR) {
            return base.Channel.GetMoldBaseInfoByNR(moldNR);
        }
        
        public ToolingManWPF.MoldPartInfoServiceReference.MoldDynamicInfo GetMoldDynamicInfoByMoldNR(string moldNR) {
            return base.Channel.GetMoldDynamicInfoByMoldNR(moldNR);
        }
        
        public System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.StorageRecord> GetMoldApplyRecords(string moldNR, string applicantId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            return base.Channel.GetMoldApplyRecords(moldNR, applicantId, startDate, endDate);
        }
        
        public System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.StorageRecord> GetMoldApplyRecordsInPages(string moldNR, int pageIndex, int pageSize, string applicantId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            return base.Channel.GetMoldApplyRecordsInPages(moldNR, pageIndex, pageSize, applicantId, startDate, endDate);
        }
        
        public System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.MoldReleaseInfo> GetMoldReleaseInfoByMoldNR(string moldNR, string operatorId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            return base.Channel.GetMoldReleaseInfoByMoldNR(moldNR, operatorId, startDate, endDate);
        }
        
        public System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.MoldReleaseInfo> GetMoldReleaseInfoByMoldNRInPage(string moldNR, int pageIndex, int pageSize, string operatorId, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            return base.Channel.GetMoldReleaseInfoByMoldNRInPage(moldNR, pageIndex, pageSize, operatorId, startDate, endDate);
        }
        
        public byte[] GetFileByName(string fileName) {
            return base.Channel.GetFileByName(fileName);
        }
        
        public System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.MoldWarnInfo> GetMoldWarnInfo(ToolingManWPF.MoldPartInfoServiceReference.MoldWarnType type) {
            return base.Channel.GetMoldWarnInfo(type);
        }
        
        public ToolingManWPF.MoldPartInfoServiceReference.Position GetMoldPositionByNr(string moldNR) {
            return base.Channel.GetMoldPositionByNr(moldNR);
        }
        
        public string GetMoldNrByPosiNr(string posiNr) {
            return base.Channel.GetMoldNrByPosiNr(posiNr);
        }
        
        public string GetMoldCurrentPosition(string moldNr) {
            return base.Channel.GetMoldCurrentPosition(moldNr);
        }
        
        public System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.ReportView> GetReportViewByDate(ToolingManWPF.MoldPartInfoServiceReference.ReportType type, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            return base.Channel.GetReportViewByDate(type, startDate, endDate);
        }
        
        public System.Collections.Generic.List<ToolingManWPF.MoldPartInfoServiceReference.StorageRecord> GetStoreRecordByDate(int type, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            return base.Channel.GetStoreRecordByDate(type, startDate, endDate);
        }
        
        public bool DelAttachmentById(int attachId, string filePath) {
            return base.Channel.DelAttachmentById(attachId, filePath);
        }
    }
}
