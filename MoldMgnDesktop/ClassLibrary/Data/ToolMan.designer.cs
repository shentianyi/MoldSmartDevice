#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClassLibrary.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
    using ENUM;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ToolingManDB")]
	public partial class ToolManDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAttachment(Attachment instance);
    partial void UpdateAttachment(Attachment instance);
    partial void DeleteAttachment(Attachment instance);
    partial void InsertWorkstation(Workstation instance);
    partial void UpdateWorkstation(Workstation instance);
    partial void DeleteWorkstation(Workstation instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertMold(Mold instance);
    partial void UpdateMold(Mold instance);
    partial void DeleteMold(Mold instance);
    partial void InsertMoldCategory(MoldCategory instance);
    partial void UpdateMoldCategory(MoldCategory instance);
    partial void DeleteMoldCategory(MoldCategory instance);
    partial void InsertMoldLastRecord(MoldLastRecord instance);
    partial void UpdateMoldLastRecord(MoldLastRecord instance);
    partial void DeleteMoldLastRecord(MoldLastRecord instance);
    partial void InsertMoldType(MoldType instance);
    partial void UpdateMoldType(MoldType instance);
    partial void DeleteMoldType(MoldType instance);
    partial void InsertPosition(Position instance);
    partial void UpdatePosition(Position instance);
    partial void DeletePosition(Position instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertStorageRecord(StorageRecord instance);
    partial void UpdateStorageRecord(StorageRecord instance);
    partial void DeleteStorageRecord(StorageRecord instance);
    partial void InsertUniqStorage(UniqStorage instance);
    partial void UpdateUniqStorage(UniqStorage instance);
    partial void DeleteUniqStorage(UniqStorage instance);
    partial void InsertWarehouse(Warehouse instance);
    partial void UpdateWarehouse(Warehouse instance);
    partial void DeleteWarehouse(Warehouse instance);
    #endregion
		
		public ToolManDataContext() : 
				base(global::ClassLibrary.Properties.Settings.Default.ToolingManDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ToolManDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ToolManDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ToolManDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ToolManDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Attachment> Attachment
		{
			get
			{
				return this.GetTable<Attachment>();
			}
		}
		
		public System.Data.Linq.Table<Workstation> Workstation
		{
			get
			{
				return this.GetTable<Workstation>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Mold> Mold
		{
			get
			{
				return this.GetTable<Mold>();
			}
		}
		
		public System.Data.Linq.Table<MoldCategory> MoldCategory
		{
			get
			{
				return this.GetTable<MoldCategory>();
			}
		}
		
		public System.Data.Linq.Table<MoldLastRecord> MoldLastRecord
		{
			get
			{
				return this.GetTable<MoldLastRecord>();
			}
		}
		
		public System.Data.Linq.Table<MoldType> MoldType
		{
			get
			{
				return this.GetTable<MoldType>();
			}
		}
		
		public System.Data.Linq.Table<Position> Position
		{
			get
			{
				return this.GetTable<Position>();
			}
		}
		
		public System.Data.Linq.Table<Project> Project
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<Report> Report
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<StorageRecord> StorageRecord
		{
			get
			{
				return this.GetTable<StorageRecord>();
			}
		}
		
		public System.Data.Linq.Table<UniqStorage> UniqStorage
		{
			get
			{
				return this.GetTable<UniqStorage>();
			}
		}
		
		public System.Data.Linq.Table<Warehouse> Warehouse
		{
			get
			{
				return this.GetTable<Warehouse>();
			}
		}
		
		public System.Data.Linq.Table<ReportView> ReportView
		{
			get
			{
				return this.GetTable<ReportView>();
			}
		}
		
		public System.Data.Linq.Table<MoldView> MoldView
		{
			get
			{
				return this.GetTable<MoldView>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attachment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachmentId;
		
		private string _MasterNR;
		
		private AttachmentType _Type;
		
		private System.DateTime _Date;
		
		private string _Path;
		
		private string _Name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentIdChanging(int value);
    partial void OnAttachmentIdChanged();
    partial void OnMasterNRChanging(string value);
    partial void OnMasterNRChanged();
    partial void OnTypeChanging(AttachmentType value);
    partial void OnTypeChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Attachment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AttachmentId
		{
			get
			{
				return this._AttachmentId;
			}
			set
			{
				if ((this._AttachmentId != value))
				{
					this.OnAttachmentIdChanging(value);
					this.SendPropertyChanging();
					this._AttachmentId = value;
					this.SendPropertyChanged("AttachmentId");
					this.OnAttachmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterNR", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MasterNR
		{
			get
			{
				return this._MasterNR;
			}
			set
			{
				if ((this._MasterNR != value))
				{
					this.OnMasterNRChanging(value);
					this.SendPropertyChanging();
					this._MasterNR = value;
					this.SendPropertyChanged("MasterNR");
					this.OnMasterNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public AttachmentType Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Workstation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Workstation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkstationID;
		
		private WorkstationType _WorkstationType;
		
		private string _Name;
		
		private int _MaxMoldCount;
		
		private int _CurrentMoldCount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkstationIDChanging(string value);
    partial void OnWorkstationIDChanged();
    partial void OnWorkstationTypeChanging(WorkstationType value);
    partial void OnWorkstationTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMaxMoldCountChanging(int value);
    partial void OnMaxMoldCountChanged();
    partial void OnCurrentMoldCountChanging(int value);
    partial void OnCurrentMoldCountChanged();
    #endregion
		
		public Workstation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkstationID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string WorkstationID
		{
			get
			{
				return this._WorkstationID;
			}
			set
			{
				if ((this._WorkstationID != value))
				{
					this.OnWorkstationIDChanging(value);
					this.SendPropertyChanging();
					this._WorkstationID = value;
					this.SendPropertyChanged("WorkstationID");
					this.OnWorkstationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkstationType", DbType="Int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public WorkstationType WorkstationType
		{
			get
			{
				return this._WorkstationType;
			}
			set
			{
				if ((this._WorkstationType != value))
				{
					this.OnWorkstationTypeChanging(value);
					this.SendPropertyChanging();
					this._WorkstationType = value;
					this.SendPropertyChanged("WorkstationType");
					this.OnWorkstationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxMoldCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int MaxMoldCount
		{
			get
			{
				return this._MaxMoldCount;
			}
			set
			{
				if ((this._MaxMoldCount != value))
				{
					this.OnMaxMoldCountChanging(value);
					this.SendPropertyChanging();
					this._MaxMoldCount = value;
					this.SendPropertyChanged("MaxMoldCount");
					this.OnMaxMoldCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentMoldCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CurrentMoldCount
		{
			get
			{
				return this._CurrentMoldCount;
			}
			set
			{
				if ((this._CurrentMoldCount != value))
				{
					this.OnCurrentMoldCountChanging(value);
					this.SendPropertyChanging();
					this._CurrentMoldCount = value;
					this.SendPropertyChanged("CurrentMoldCount");
					this.OnCurrentMoldCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeID;
		
		private string _Name;
		
		private EntitySet<Report> _Report;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Employee()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Report", Storage="_Report", ThisKey="EmployeeID", OtherKey="OperatorID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<Report> Report
		{
			get
			{
				if ((this.serializing 
							&& (this._Report.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Report;
			}
			set
			{
				this._Report.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Report(Report entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Report(Report entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void Initialize()
		{
			this._Report = new EntitySet<Report>(new Action<Report>(this.attach_Report), new Action<Report>(this.detach_Report));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mold")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Mold : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MoldNR;
		
		private string _MoldTypeID;
		
		private string _ProjectID;
		
		private string _Name;
		
		private MoldStateType _State;
		
		private System.Nullable<int> _Cuttedtimes;
		
		private System.Nullable<int> _MaxCuttimes;
		
		private System.Nullable<int> _CurrentCuttimes;
		
		private System.Nullable<int> _MaxLendHour;
		
		private System.Nullable<int> _ReleaseCycle;
		
		private System.Nullable<System.DateTime> _LastReleasedDate;
		
		private System.Nullable<int> _MaintainCycle;
		
		private System.Nullable<System.DateTime> _LastMainedDate;
		
		private string _Producer;
		
		private System.Nullable<decimal> _Weight;
		
		private string _Material;
		
		private EntitySet<MoldLastRecord> _MoldLastRecord;
		
		private EntitySet<Report> _Report;
		
		private EntitySet<UniqStorage> _UniqStorage;
		
		private EntityRef<MoldType> _MoldType;
		
		private EntityRef<Project> _Project;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMoldNRChanging(string value);
    partial void OnMoldNRChanged();
    partial void OnMoldTypeIDChanging(string value);
    partial void OnMoldTypeIDChanged();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateChanging(MoldStateType value);
    partial void OnStateChanged();
    partial void OnCuttedtimesChanging(System.Nullable<int> value);
    partial void OnCuttedtimesChanged();
    partial void OnMaxCuttimesChanging(System.Nullable<int> value);
    partial void OnMaxCuttimesChanged();
    partial void OnCurrentCuttimesChanging(System.Nullable<int> value);
    partial void OnCurrentCuttimesChanged();
    partial void OnMaxLendHourChanging(System.Nullable<int> value);
    partial void OnMaxLendHourChanged();
    partial void OnReleaseCycleChanging(System.Nullable<int> value);
    partial void OnReleaseCycleChanged();
    partial void OnLastReleasedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReleasedDateChanged();
    partial void OnMaintainCycleChanging(System.Nullable<int> value);
    partial void OnMaintainCycleChanged();
    partial void OnLastMainedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastMainedDateChanged();
    partial void OnProducerChanging(string value);
    partial void OnProducerChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnMaterialChanging(string value);
    partial void OnMaterialChanged();
    #endregion
		
		public Mold()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldNR", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string MoldNR
		{
			get
			{
				return this._MoldNR;
			}
			set
			{
				if ((this._MoldNR != value))
				{
					this.OnMoldNRChanging(value);
					this.SendPropertyChanging();
					this._MoldNR = value;
					this.SendPropertyChanged("MoldNR");
					this.OnMoldNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldTypeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MoldTypeID
		{
			get
			{
				return this._MoldTypeID;
			}
			set
			{
				if ((this._MoldTypeID != value))
				{
					if (this._MoldType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMoldTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MoldTypeID = value;
					this.SendPropertyChanged("MoldTypeID");
					this.OnMoldTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public MoldStateType State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuttedtimes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> Cuttedtimes
		{
			get
			{
				return this._Cuttedtimes;
			}
			set
			{
				if ((this._Cuttedtimes != value))
				{
					this.OnCuttedtimesChanging(value);
					this.SendPropertyChanging();
					this._Cuttedtimes = value;
					this.SendPropertyChanged("Cuttedtimes");
					this.OnCuttedtimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCuttimes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> MaxCuttimes
		{
			get
			{
				return this._MaxCuttimes;
			}
			set
			{
				if ((this._MaxCuttimes != value))
				{
					this.OnMaxCuttimesChanging(value);
					this.SendPropertyChanging();
					this._MaxCuttimes = value;
					this.SendPropertyChanged("MaxCuttimes");
					this.OnMaxCuttimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCuttimes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> CurrentCuttimes
		{
			get
			{
				return this._CurrentCuttimes;
			}
			set
			{
				if ((this._CurrentCuttimes != value))
				{
					this.OnCurrentCuttimesChanging(value);
					this.SendPropertyChanging();
					this._CurrentCuttimes = value;
					this.SendPropertyChanged("CurrentCuttimes");
					this.OnCurrentCuttimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLendHour", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> MaxLendHour
		{
			get
			{
				return this._MaxLendHour;
			}
			set
			{
				if ((this._MaxLendHour != value))
				{
					this.OnMaxLendHourChanging(value);
					this.SendPropertyChanging();
					this._MaxLendHour = value;
					this.SendPropertyChanged("MaxLendHour");
					this.OnMaxLendHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseCycle", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> ReleaseCycle
		{
			get
			{
				return this._ReleaseCycle;
			}
			set
			{
				if ((this._ReleaseCycle != value))
				{
					this.OnReleaseCycleChanging(value);
					this.SendPropertyChanging();
					this._ReleaseCycle = value;
					this.SendPropertyChanged("ReleaseCycle");
					this.OnReleaseCycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReleasedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> LastReleasedDate
		{
			get
			{
				return this._LastReleasedDate;
			}
			set
			{
				if ((this._LastReleasedDate != value))
				{
					this.OnLastReleasedDateChanging(value);
					this.SendPropertyChanging();
					this._LastReleasedDate = value;
					this.SendPropertyChanged("LastReleasedDate");
					this.OnLastReleasedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintainCycle", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> MaintainCycle
		{
			get
			{
				return this._MaintainCycle;
			}
			set
			{
				if ((this._MaintainCycle != value))
				{
					this.OnMaintainCycleChanging(value);
					this.SendPropertyChanging();
					this._MaintainCycle = value;
					this.SendPropertyChanged("MaintainCycle");
					this.OnMaintainCycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMainedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<System.DateTime> LastMainedDate
		{
			get
			{
				return this._LastMainedDate;
			}
			set
			{
				if ((this._LastMainedDate != value))
				{
					this.OnLastMainedDateChanging(value);
					this.SendPropertyChanging();
					this._LastMainedDate = value;
					this.SendPropertyChanged("LastMainedDate");
					this.OnLastMainedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producer", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Producer
		{
			get
			{
				return this._Producer;
			}
			set
			{
				if ((this._Producer != value))
				{
					this.OnProducerChanging(value);
					this.SendPropertyChanging();
					this._Producer = value;
					this.SendPropertyChanged("Producer");
					this.OnProducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this.OnMaterialChanging(value);
					this.SendPropertyChanging();
					this._Material = value;
					this.SendPropertyChanged("Material");
					this.OnMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mold_MoldLastRecord", Storage="_MoldLastRecord", ThisKey="MoldNR", OtherKey="MoldNR")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<MoldLastRecord> MoldLastRecord
		{
			get
			{
				if ((this.serializing 
							&& (this._MoldLastRecord.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MoldLastRecord;
			}
			set
			{
				this._MoldLastRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mold_Report", Storage="_Report", ThisKey="MoldNR", OtherKey="MoldID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<Report> Report
		{
			get
			{
				if ((this.serializing 
							&& (this._Report.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Report;
			}
			set
			{
				this._Report.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mold_UniqStorage", Storage="_UniqStorage", ThisKey="MoldNR", OtherKey="UniqNR")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<UniqStorage> UniqStorage
		{
			get
			{
				if ((this.serializing 
							&& (this._UniqStorage.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UniqStorage;
			}
			set
			{
				this._UniqStorage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MoldType_Mold", Storage="_MoldType", ThisKey="MoldTypeID", OtherKey="MoldTypeID", IsForeignKey=true)]
		public MoldType MoldType
		{
			get
			{
				return this._MoldType.Entity;
			}
			set
			{
				MoldType previousValue = this._MoldType.Entity;
				if (((previousValue != value) 
							|| (this._MoldType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MoldType.Entity = null;
						previousValue.Mold.Remove(this);
					}
					this._MoldType.Entity = value;
					if ((value != null))
					{
						value.Mold.Add(this);
						this._MoldTypeID = value.MoldTypeID;
					}
					else
					{
						this._MoldTypeID = default(string);
					}
					this.SendPropertyChanged("MoldType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Mold", Storage="_Project", ThisKey="ProjectID", OtherKey="ProjectID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Mold.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Mold.Add(this);
						this._ProjectID = value.ProjectID;
					}
					else
					{
						this._ProjectID = default(string);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MoldLastRecord(MoldLastRecord entity)
		{
			this.SendPropertyChanging();
			entity.Mold = this;
		}
		
		private void detach_MoldLastRecord(MoldLastRecord entity)
		{
			this.SendPropertyChanging();
			entity.Mold = null;
		}
		
		private void attach_Report(Report entity)
		{
			this.SendPropertyChanging();
			entity.Mold = this;
		}
		
		private void detach_Report(Report entity)
		{
			this.SendPropertyChanging();
			entity.Mold = null;
		}
		
		private void attach_UniqStorage(UniqStorage entity)
		{
			this.SendPropertyChanging();
			entity.Mold = this;
		}
		
		private void detach_UniqStorage(UniqStorage entity)
		{
			this.SendPropertyChanging();
			entity.Mold = null;
		}
		
		private void Initialize()
		{
			this._MoldLastRecord = new EntitySet<MoldLastRecord>(new Action<MoldLastRecord>(this.attach_MoldLastRecord), new Action<MoldLastRecord>(this.detach_MoldLastRecord));
			this._Report = new EntitySet<Report>(new Action<Report>(this.attach_Report), new Action<Report>(this.detach_Report));
			this._UniqStorage = new EntitySet<UniqStorage>(new Action<UniqStorage>(this.attach_UniqStorage), new Action<UniqStorage>(this.detach_UniqStorage));
			this._MoldType = default(EntityRef<MoldType>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoldCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MoldCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MoldCateID;
		
		private string _Name;
		
		private EntitySet<MoldType> _MoldType;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMoldCateIDChanging(string value);
    partial void OnMoldCateIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public MoldCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldCateID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string MoldCateID
		{
			get
			{
				return this._MoldCateID;
			}
			set
			{
				if ((this._MoldCateID != value))
				{
					this.OnMoldCateIDChanging(value);
					this.SendPropertyChanging();
					this._MoldCateID = value;
					this.SendPropertyChanged("MoldCateID");
					this.OnMoldCateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MoldCategory_MoldType", Storage="_MoldType", ThisKey="MoldCateID", OtherKey="MoldCateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<MoldType> MoldType
		{
			get
			{
				if ((this.serializing 
							&& (this._MoldType.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MoldType;
			}
			set
			{
				this._MoldType.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MoldType(MoldType entity)
		{
			this.SendPropertyChanging();
			entity.MoldCategory = this;
		}
		
		private void detach_MoldType(MoldType entity)
		{
			this.SendPropertyChanging();
			entity.MoldCategory = null;
		}
		
		private void Initialize()
		{
			this._MoldType = new EntitySet<MoldType>(new Action<MoldType>(this.attach_MoldType), new Action<MoldType>(this.detach_MoldType));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoldLastRecord")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MoldLastRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MoldNR;
		
		private System.Guid _StorageRecordNR;
		
		private EntityRef<Mold> _Mold;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMoldNRChanging(string value);
    partial void OnMoldNRChanged();
    partial void OnStorageRecordNRChanging(System.Guid value);
    partial void OnStorageRecordNRChanged();
    #endregion
		
		public MoldLastRecord()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldNR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MoldNR
		{
			get
			{
				return this._MoldNR;
			}
			set
			{
				if ((this._MoldNR != value))
				{
					if (this._Mold.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMoldNRChanging(value);
					this.SendPropertyChanging();
					this._MoldNR = value;
					this.SendPropertyChanged("MoldNR");
					this.OnMoldNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageRecordNR", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid StorageRecordNR
		{
			get
			{
				return this._StorageRecordNR;
			}
			set
			{
				if ((this._StorageRecordNR != value))
				{
					this.OnStorageRecordNRChanging(value);
					this.SendPropertyChanging();
					this._StorageRecordNR = value;
					this.SendPropertyChanged("StorageRecordNR");
					this.OnStorageRecordNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mold_MoldLastRecord", Storage="_Mold", ThisKey="MoldNR", OtherKey="MoldNR", IsForeignKey=true)]
		public Mold Mold
		{
			get
			{
				return this._Mold.Entity;
			}
			set
			{
				Mold previousValue = this._Mold.Entity;
				if (((previousValue != value) 
							|| (this._Mold.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mold.Entity = null;
						previousValue.MoldLastRecord.Remove(this);
					}
					this._Mold.Entity = value;
					if ((value != null))
					{
						value.MoldLastRecord.Add(this);
						this._MoldNR = value.MoldNR;
					}
					else
					{
						this._MoldNR = default(string);
					}
					this.SendPropertyChanged("Mold");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Mold = default(EntityRef<Mold>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoldType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MoldType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MoldTypeID;
		
		private string _MoldCateID;
		
		private string _Name;
		
		private EntitySet<Mold> _Mold;
		
		private EntityRef<MoldCategory> _MoldCategory;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMoldTypeIDChanging(string value);
    partial void OnMoldTypeIDChanged();
    partial void OnMoldCateIDChanging(string value);
    partial void OnMoldCateIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public MoldType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldTypeID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string MoldTypeID
		{
			get
			{
				return this._MoldTypeID;
			}
			set
			{
				if ((this._MoldTypeID != value))
				{
					this.OnMoldTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MoldTypeID = value;
					this.SendPropertyChanged("MoldTypeID");
					this.OnMoldTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldCateID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MoldCateID
		{
			get
			{
				return this._MoldCateID;
			}
			set
			{
				if ((this._MoldCateID != value))
				{
					if (this._MoldCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMoldCateIDChanging(value);
					this.SendPropertyChanging();
					this._MoldCateID = value;
					this.SendPropertyChanged("MoldCateID");
					this.OnMoldCateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MoldType_Mold", Storage="_Mold", ThisKey="MoldTypeID", OtherKey="MoldTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Mold> Mold
		{
			get
			{
				if ((this.serializing 
							&& (this._Mold.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Mold;
			}
			set
			{
				this._Mold.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MoldCategory_MoldType", Storage="_MoldCategory", ThisKey="MoldCateID", OtherKey="MoldCateID", IsForeignKey=true)]
		public MoldCategory MoldCategory
		{
			get
			{
				return this._MoldCategory.Entity;
			}
			set
			{
				MoldCategory previousValue = this._MoldCategory.Entity;
				if (((previousValue != value) 
							|| (this._MoldCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MoldCategory.Entity = null;
						previousValue.MoldType.Remove(this);
					}
					this._MoldCategory.Entity = value;
					if ((value != null))
					{
						value.MoldType.Add(this);
						this._MoldCateID = value.MoldCateID;
					}
					else
					{
						this._MoldCateID = default(string);
					}
					this.SendPropertyChanged("MoldCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mold(Mold entity)
		{
			this.SendPropertyChanging();
			entity.MoldType = this;
		}
		
		private void detach_Mold(Mold entity)
		{
			this.SendPropertyChanging();
			entity.MoldType = null;
		}
		
		private void Initialize()
		{
			this._Mold = new EntitySet<Mold>(new Action<Mold>(this.attach_Mold), new Action<Mold>(this.detach_Mold));
			this._MoldCategory = default(EntityRef<MoldCategory>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Position")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PositionID;
		
		private string _WarehouseNR;
		
		private string _PositionNR;
		
		private int _Capicity;
		
		private EntitySet<UniqStorage> _UniqStorage;
		
		private EntityRef<Warehouse> _Warehouse;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPositionIDChanging(System.Guid value);
    partial void OnPositionIDChanged();
    partial void OnWarehouseNRChanging(string value);
    partial void OnWarehouseNRChanged();
    partial void OnPositionNRChanging(string value);
    partial void OnPositionNRChanged();
    partial void OnCapicityChanging(int value);
    partial void OnCapicityChanged();
    #endregion
		
		public Position()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseNR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string WarehouseNR
		{
			get
			{
				return this._WarehouseNR;
			}
			set
			{
				if ((this._WarehouseNR != value))
				{
					if (this._Warehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseNRChanging(value);
					this.SendPropertyChanging();
					this._WarehouseNR = value;
					this.SendPropertyChanged("WarehouseNR");
					this.OnWarehouseNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionNR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PositionNR
		{
			get
			{
				return this._PositionNR;
			}
			set
			{
				if ((this._PositionNR != value))
				{
					this.OnPositionNRChanging(value);
					this.SendPropertyChanging();
					this._PositionNR = value;
					this.SendPropertyChanged("PositionNR");
					this.OnPositionNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capicity", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Capicity
		{
			get
			{
				return this._Capicity;
			}
			set
			{
				if ((this._Capicity != value))
				{
					this.OnCapicityChanging(value);
					this.SendPropertyChanging();
					this._Capicity = value;
					this.SendPropertyChanged("Capicity");
					this.OnCapicityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_UniqStorage", Storage="_UniqStorage", ThisKey="PositionID", OtherKey="PositionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<UniqStorage> UniqStorage
		{
			get
			{
				if ((this.serializing 
							&& (this._UniqStorage.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UniqStorage;
			}
			set
			{
				this._UniqStorage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_Position", Storage="_Warehouse", ThisKey="WarehouseNR", OtherKey="WarehouseNR", IsForeignKey=true)]
		public Warehouse Warehouse
		{
			get
			{
				return this._Warehouse.Entity;
			}
			set
			{
				Warehouse previousValue = this._Warehouse.Entity;
				if (((previousValue != value) 
							|| (this._Warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Warehouse.Entity = null;
						previousValue.Position.Remove(this);
					}
					this._Warehouse.Entity = value;
					if ((value != null))
					{
						value.Position.Add(this);
						this._WarehouseNR = value.WarehouseNR;
					}
					else
					{
						this._WarehouseNR = default(string);
					}
					this.SendPropertyChanged("Warehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UniqStorage(UniqStorage entity)
		{
			this.SendPropertyChanging();
			entity.Position = this;
		}
		
		private void detach_UniqStorage(UniqStorage entity)
		{
			this.SendPropertyChanging();
			entity.Position = null;
		}
		
		private void Initialize()
		{
			this._UniqStorage = new EntitySet<UniqStorage>(new Action<UniqStorage>(this.attach_UniqStorage), new Action<UniqStorage>(this.detach_UniqStorage));
			this._Warehouse = default(EntityRef<Warehouse>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectID;
		
		private string _Name;
		
		private EntitySet<Mold> _Mold;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIDChanging(string value);
    partial void OnProjectIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Project()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Mold", Storage="_Mold", ThisKey="ProjectID", OtherKey="ProjectID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<Mold> Mold
		{
			get
			{
				if ((this.serializing 
							&& (this._Mold.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Mold;
			}
			set
			{
				this._Mold.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mold(Mold entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Mold(Mold entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void Initialize()
		{
			this._Mold = new EntitySet<Mold>(new Action<Mold>(this.attach_Mold), new Action<Mold>(this.detach_Mold));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ReportId;
		
		private string _MoldID;
		
		private string _OperatorID;
		
		private System.DateTime _Date;
		
		private ReportType _ReportType;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Mold> _Mold;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(System.Guid value);
    partial void OnReportIdChanged();
    partial void OnMoldIDChanging(string value);
    partial void OnMoldIDChanged();
    partial void OnOperatorIDChanging(string value);
    partial void OnOperatorIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnReportTypeChanging(ReportType value);
    partial void OnReportTypeChanged();
    #endregion
		
		public Report()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MoldID
		{
			get
			{
				return this._MoldID;
			}
			set
			{
				if ((this._MoldID != value))
				{
					if (this._Mold.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMoldIDChanging(value);
					this.SendPropertyChanging();
					this._MoldID = value;
					this.SendPropertyChanged("MoldID");
					this.OnMoldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorID", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string OperatorID
		{
			get
			{
				return this._OperatorID;
			}
			set
			{
				if ((this._OperatorID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperatorIDChanging(value);
					this.SendPropertyChanging();
					this._OperatorID = value;
					this.SendPropertyChanged("OperatorID");
					this.OnOperatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportType", DbType="Int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public ReportType ReportType
		{
			get
			{
				return this._ReportType;
			}
			set
			{
				if ((this._ReportType != value))
				{
					this.OnReportTypeChanging(value);
					this.SendPropertyChanging();
					this._ReportType = value;
					this.SendPropertyChanged("ReportType");
					this.OnReportTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Report", Storage="_Employee", ThisKey="OperatorID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Report.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Report.Add(this);
						this._OperatorID = value.EmployeeID;
					}
					else
					{
						this._OperatorID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mold_Report", Storage="_Mold", ThisKey="MoldID", OtherKey="MoldNR", IsForeignKey=true)]
		public Mold Mold
		{
			get
			{
				return this._Mold.Entity;
			}
			set
			{
				Mold previousValue = this._Mold.Entity;
				if (((previousValue != value) 
							|| (this._Mold.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mold.Entity = null;
						previousValue.Report.Remove(this);
					}
					this._Mold.Entity = value;
					if ((value != null))
					{
						value.Report.Add(this);
						this._MoldID = value.MoldNR;
					}
					else
					{
						this._MoldID = default(string);
					}
					this.SendPropertyChanged("Mold");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Mold = default(EntityRef<Mold>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StorageRecord")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StorageRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StorageRecordId;
		
		private System.Guid _StorageRecordNR;
		
		private System.Nullable<System.Guid> _PositionId;
		
		private string _Source;
		
		private string _Destination;
		
		private string _OperatorId;
		
		private string _ApplicantId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _Quantity;
		
		private StorageRecordType _RecordType;
		
		private string _TargetNR;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStorageRecordIdChanging(int value);
    partial void OnStorageRecordIdChanged();
    partial void OnStorageRecordNRChanging(System.Guid value);
    partial void OnStorageRecordNRChanged();
    partial void OnPositionIdChanging(System.Nullable<System.Guid> value);
    partial void OnPositionIdChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnOperatorIdChanging(string value);
    partial void OnOperatorIdChanged();
    partial void OnApplicantIdChanging(string value);
    partial void OnApplicantIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnRecordTypeChanging(StorageRecordType value);
    partial void OnRecordTypeChanged();
    partial void OnTargetNRChanging(string value);
    partial void OnTargetNRChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public StorageRecord()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageRecordId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StorageRecordId
		{
			get
			{
				return this._StorageRecordId;
			}
			set
			{
				if ((this._StorageRecordId != value))
				{
					this.OnStorageRecordIdChanging(value);
					this.SendPropertyChanging();
					this._StorageRecordId = value;
					this.SendPropertyChanged("StorageRecordId");
					this.OnStorageRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageRecordNR", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid StorageRecordNR
		{
			get
			{
				return this._StorageRecordNR;
			}
			set
			{
				if ((this._StorageRecordNR != value))
				{
					this.OnStorageRecordNRChanging(value);
					this.SendPropertyChanging();
					this._StorageRecordNR = value;
					this.SendPropertyChanged("StorageRecordNR");
					this.OnStorageRecordNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.Guid> PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantId", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string ApplicantId
		{
			get
			{
				return this._ApplicantId;
			}
			set
			{
				if ((this._ApplicantId != value))
				{
					this.OnApplicantIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicantId = value;
					this.SendPropertyChanged("ApplicantId");
					this.OnApplicantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordType", DbType="Int", CanBeNull=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public StorageRecordType RecordType
		{
			get
			{
				return this._RecordType;
			}
			set
			{
				if ((this._RecordType != value))
				{
					this.OnRecordTypeChanging(value);
					this.SendPropertyChanging();
					this._RecordType = value;
					this.SendPropertyChanged("RecordType");
					this.OnRecordTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetNR", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string TargetNR
		{
			get
			{
				return this._TargetNR;
			}
			set
			{
				if ((this._TargetNR != value))
				{
					this.OnTargetNRChanging(value);
					this.SendPropertyChanging();
					this._TargetNR = value;
					this.SendPropertyChanged("TargetNR");
					this.OnTargetNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UniqStorage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UniqStorage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UniqStorageId;
		
		private string _UniqNR;
		
		private System.Guid _PositionId;
		
		private string _PackageNR;
		
		private int _Quantity;
		
		private EntityRef<Mold> _Mold;
		
		private EntityRef<Position> _Position;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqStorageIdChanging(System.Guid value);
    partial void OnUniqStorageIdChanged();
    partial void OnUniqNRChanging(string value);
    partial void OnUniqNRChanged();
    partial void OnPositionIdChanging(System.Guid value);
    partial void OnPositionIdChanged();
    partial void OnPackageNRChanging(string value);
    partial void OnPackageNRChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public UniqStorage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqStorageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid UniqStorageId
		{
			get
			{
				return this._UniqStorageId;
			}
			set
			{
				if ((this._UniqStorageId != value))
				{
					this.OnUniqStorageIdChanging(value);
					this.SendPropertyChanging();
					this._UniqStorageId = value;
					this.SendPropertyChanged("UniqStorageId");
					this.OnUniqStorageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqNR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UniqNR
		{
			get
			{
				return this._UniqNR;
			}
			set
			{
				if ((this._UniqNR != value))
				{
					if (this._Mold.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqNRChanging(value);
					this.SendPropertyChanging();
					this._UniqNR = value;
					this.SendPropertyChanged("UniqNR");
					this.OnUniqNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					if (this._Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageNR", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string PackageNR
		{
			get
			{
				return this._PackageNR;
			}
			set
			{
				if ((this._PackageNR != value))
				{
					this.OnPackageNRChanging(value);
					this.SendPropertyChanging();
					this._PackageNR = value;
					this.SendPropertyChanged("PackageNR");
					this.OnPackageNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mold_UniqStorage", Storage="_Mold", ThisKey="UniqNR", OtherKey="MoldNR", IsForeignKey=true)]
		public Mold Mold
		{
			get
			{
				return this._Mold.Entity;
			}
			set
			{
				Mold previousValue = this._Mold.Entity;
				if (((previousValue != value) 
							|| (this._Mold.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mold.Entity = null;
						previousValue.UniqStorage.Remove(this);
					}
					this._Mold.Entity = value;
					if ((value != null))
					{
						value.UniqStorage.Add(this);
						this._UniqNR = value.MoldNR;
					}
					else
					{
						this._UniqNR = default(string);
					}
					this.SendPropertyChanged("Mold");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_UniqStorage", Storage="_Position", ThisKey="PositionId", OtherKey="PositionID", IsForeignKey=true)]
		public Position Position
		{
			get
			{
				return this._Position.Entity;
			}
			set
			{
				Position previousValue = this._Position.Entity;
				if (((previousValue != value) 
							|| (this._Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Position.Entity = null;
						previousValue.UniqStorage.Remove(this);
					}
					this._Position.Entity = value;
					if ((value != null))
					{
						value.UniqStorage.Add(this);
						this._PositionId = value.PositionID;
					}
					else
					{
						this._PositionId = default(System.Guid);
					}
					this.SendPropertyChanged("Position");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Mold = default(EntityRef<Mold>);
			this._Position = default(EntityRef<Position>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Warehouse")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Warehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WarehouseNR;
		
		private string _Name;
		
		private WarehouseType _WarehouseType;
		
		private EntitySet<Position> _Position;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWarehouseNRChanging(string value);
    partial void OnWarehouseNRChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWarehouseTypeChanging(WarehouseType value);
    partial void OnWarehouseTypeChanged();
    #endregion
		
		public Warehouse()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseNR", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string WarehouseNR
		{
			get
			{
				return this._WarehouseNR;
			}
			set
			{
				if ((this._WarehouseNR != value))
				{
					this.OnWarehouseNRChanging(value);
					this.SendPropertyChanging();
					this._WarehouseNR = value;
					this.SendPropertyChanged("WarehouseNR");
					this.OnWarehouseNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseType", DbType="Int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public WarehouseType WarehouseType
		{
			get
			{
				return this._WarehouseType;
			}
			set
			{
				if ((this._WarehouseType != value))
				{
					this.OnWarehouseTypeChanging(value);
					this.SendPropertyChanging();
					this._WarehouseType = value;
					this.SendPropertyChanged("WarehouseType");
					this.OnWarehouseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_Position", Storage="_Position", ThisKey="WarehouseNR", OtherKey="WarehouseNR")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Position> Position
		{
			get
			{
				if ((this.serializing 
							&& (this._Position.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Position;
			}
			set
			{
				this._Position.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Position(Position entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = this;
		}
		
		private void detach_Position(Position entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = null;
		}
		
		private void Initialize()
		{
			this._Position = new EntitySet<Position>(new Action<Position>(this.attach_Position), new Action<Position>(this.detach_Position));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportView")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ReportView
	{
		
		private string _Name;
		
		private string _MoldID;
		
		private System.DateTime _Date;
		
		private string _OperatorID;
		
		private System.Guid _ReportId;
		
		private ReportType _ReportType;
		
		public ReportView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MoldID
		{
			get
			{
				return this._MoldID;
			}
			set
			{
				if ((this._MoldID != value))
				{
					this._MoldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorID", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string OperatorID
		{
			get
			{
				return this._OperatorID;
			}
			set
			{
				if ((this._OperatorID != value))
				{
					this._OperatorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this._ReportId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportType", DbType="Int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public ReportType ReportType
		{
			get
			{
				return this._ReportType;
			}
			set
			{
				if ((this._ReportType != value))
				{
					this._ReportType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoldView")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MoldView
	{
		
		private string _MoldNR;
		
		private string _MoldTypeID;
		
		private string _ProjectID;
		
		private string _ProjectName;
		
		private string _TypeName;
		
		private string _CateName;
		
		private string _MoldCateID;
		
		private string _Name;
		
		private MoldStateType _State;
		
		private System.Nullable<int> _Cuttedtimes;
		
		private System.Nullable<int> _MaxCuttimes;
		
		private System.Nullable<int> _CurrentCuttimes;
		
		private System.Nullable<int> _MaxLendHour;
		
		private System.Nullable<int> _ReleaseCycle;
		
		private System.Nullable<System.DateTime> _LastReleasedDate;
		
		private System.Nullable<int> _MaintainCycle;
		
		private System.Nullable<System.DateTime> _LastMainedDate;
		
		private System.Nullable<System.DateTime> _LastRecordDate;
		
		private System.Nullable<System.Guid> _StorageRecordNR;
		
		private string _Producer;
		
		private System.Nullable<decimal> _Weight;
		
		private string _Material;
		
		private string _Destination;
		
		public MoldView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldNR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string MoldNR
		{
			get
			{
				return this._MoldNR;
			}
			set
			{
				if ((this._MoldNR != value))
				{
					this._MoldNR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldTypeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MoldTypeID
		{
			get
			{
				return this._MoldTypeID;
			}
			set
			{
				if ((this._MoldTypeID != value))
				{
					this._MoldTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this._ProjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this._ProjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CateName", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string CateName
		{
			get
			{
				return this._CateName;
			}
			set
			{
				if ((this._CateName != value))
				{
					this._CateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoldCateID", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string MoldCateID
		{
			get
			{
				return this._MoldCateID;
			}
			set
			{
				if ((this._MoldCateID != value))
				{
					this._MoldCateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public MoldStateType State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuttedtimes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> Cuttedtimes
		{
			get
			{
				return this._Cuttedtimes;
			}
			set
			{
				if ((this._Cuttedtimes != value))
				{
					this._Cuttedtimes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCuttimes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> MaxCuttimes
		{
			get
			{
				return this._MaxCuttimes;
			}
			set
			{
				if ((this._MaxCuttimes != value))
				{
					this._MaxCuttimes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCuttimes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> CurrentCuttimes
		{
			get
			{
				return this._CurrentCuttimes;
			}
			set
			{
				if ((this._CurrentCuttimes != value))
				{
					this._CurrentCuttimes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLendHour", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> MaxLendHour
		{
			get
			{
				return this._MaxLendHour;
			}
			set
			{
				if ((this._MaxLendHour != value))
				{
					this._MaxLendHour = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseCycle", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<int> ReleaseCycle
		{
			get
			{
				return this._ReleaseCycle;
			}
			set
			{
				if ((this._ReleaseCycle != value))
				{
					this._ReleaseCycle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReleasedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<System.DateTime> LastReleasedDate
		{
			get
			{
				return this._LastReleasedDate;
			}
			set
			{
				if ((this._LastReleasedDate != value))
				{
					this._LastReleasedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintainCycle", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<int> MaintainCycle
		{
			get
			{
				return this._MaintainCycle;
			}
			set
			{
				if ((this._MaintainCycle != value))
				{
					this._MaintainCycle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMainedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<System.DateTime> LastMainedDate
		{
			get
			{
				return this._LastMainedDate;
			}
			set
			{
				if ((this._LastMainedDate != value))
				{
					this._LastMainedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRecordDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<System.DateTime> LastRecordDate
		{
			get
			{
				return this._LastRecordDate;
			}
			set
			{
				if ((this._LastRecordDate != value))
				{
					this._LastRecordDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageRecordNR", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<System.Guid> StorageRecordNR
		{
			get
			{
				return this._StorageRecordNR;
			}
			set
			{
				if ((this._StorageRecordNR != value))
				{
					this._StorageRecordNR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producer", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string Producer
		{
			get
			{
				return this._Producer;
			}
			set
			{
				if ((this._Producer != value))
				{
					this._Producer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this._Material = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this._Destination = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
